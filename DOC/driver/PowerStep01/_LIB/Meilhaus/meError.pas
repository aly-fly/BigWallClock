//==============================================================================
//Copyright(c), Meilhaus Electronic GmbH
//              http://www.meilhaus.de
//              support@meilhaus.de
//
//Source File : meError.pas
//            : 2011-02-21 converted from meerror.h
//            : 2012-04-05 added error codes returned by property functions
//==============================================================================
unit meError;

interface

const
  ME_ERRNO_SUCCESS = 0;
  ME_ERRNO_INVALID_DEVICE = 1;
  ME_ERRNO_INVALID_SUBDEVICE = 2;
  ME_ERRNO_INVALID_CHANNEL = 3;
  ME_ERRNO_INVALID_SINGLE_CONFIG = 4;
  ME_ERRNO_INVALID_REF = 5;
  ME_ERRNO_INVALID_TRIG_CHAN = 6;
  ME_ERRNO_INVALID_TRIG_TYPE = 7;
  ME_ERRNO_INVALID_TRIG_EDGE = 8;
  ME_ERRNO_INVALID_TIMEOUT = 9;
  ME_ERRNO_INVALID_FLAGS = 10;
  ME_ERRNO_OPEN = 11;
  ME_ERRNO_CLOSE = 12;
  ME_ERRNO_NOT_OPEN = 13;
  ME_ERRNO_INVALID_DIR = 14;
  ME_ERRNO_PREVIOUS_CONFIG = 15;
  ME_ERRNO_NOT_SUPPORTED = 16;
  ME_ERRNO_SUBDEVICE_TYPE = 17;
  ME_ERRNO_USER_BUFFER_SIZE = 18;
  ME_ERRNO_LOCKED = 19;
  ME_ERRNO_NO_MORE_SUBDEVICE_TYPE = 20;
  ME_ERRNO_TIMEOUT = 21;
  ME_ERRNO_SIGNAL = 22;
  ME_ERRNO_INVALID_IRQ_SOURCE = 23;
  ME_ERRNO_THREAD_RUNNING = 24;
  ME_ERRNO_START_THREAD = 25;
  ME_ERRNO_CANCEL_THREAD = 26;
  ME_ERRNO_NO_CALLBACK = 27;
  ME_ERRNO_USED = 28;
  ME_ERRNO_INVALID_UNIT = 29;
  ME_ERRNO_INVALID_MIN_MAX = 30;
  ME_ERRNO_NO_RANGE = 31;
  ME_ERRNO_INVALID_RANGE = 32;
  ME_ERRNO_SUBDEVICE_BUSY = 33;
  ME_ERRNO_INVALID_LOCK = 34;
  ME_ERRNO_INVALID_SWITCH = 35;
  ME_ERRNO_INVALID_ERROR_MSG_COUNT = 36;
  ME_ERRNO_INVALID_STREAM_CONFIG = 37;
  ME_ERRNO_INVALID_CONFIG_LIST_COUNT = 38;
  ME_ERRNO_INVALID_ACQ_START_TRIG_TYPE = 39;
  ME_ERRNO_INVALID_ACQ_START_TRIG_EDGE = 40;
  ME_ERRNO_INVALID_ACQ_START_TRIG_CHAN = 41;
  ME_ERRNO_INVALID_ACQ_START_TIMEOUT = 42;
  ME_ERRNO_INVALID_ACQ_START_ARG = 43;
  ME_ERRNO_INVALID_SCAN_START_TRIG_TYPE = 44;
  ME_ERRNO_INVALID_SCAN_START_ARG = 45;
  ME_ERRNO_INVALID_CONV_START_TRIG_TYPE = 46;
  ME_ERRNO_INVALID_CONV_START_ARG = 47;
  ME_ERRNO_INVALID_SCAN_STOP_TRIG_TYPE = 48;
  ME_ERRNO_INVALID_SCAN_STOP_ARG = 49;
  ME_ERRNO_INVALID_ACQ_STOP_TRIG_TYPE = 50;
  ME_ERRNO_INVALID_ACQ_STOP_ARG = 51;
  ME_ERRNO_SUBDEVICE_NOT_RUNNING = 52;
  ME_ERRNO_INVALID_READ_MODE = 53;
  ME_ERRNO_INVALID_VALUE_COUNT = 54;
  ME_ERRNO_INVALID_WRITE_MODE = 55;
  ME_ERRNO_INVALID_TIMER = 56;
  ME_ERRNO_DEVICE_UNPLUGGED = 57;
  ME_ERRNO_USED_INTERNAL = 58;
  ME_ERRNO_INVALID_DUTY_CYCLE = 59;
  ME_ERRNO_INVALID_WAIT = 60;
  ME_ERRNO_CONNECT_REMOTE = 61;
  ME_ERRNO_COMMUNICATION = 62;
  ME_ERRNO_INVALID_SINGLE_LIST = 63;
  ME_ERRNO_INVALID_MODULE_TYPE = 64;
  ME_ERRNO_INVALID_START_MODE = 65;
  ME_ERRNO_INVALID_STOP_MODE = 66;
  ME_ERRNO_INVALID_FIFO_IRQ_THRESHOLD = 67;
  ME_ERRNO_INVALID_POINTER = 68;
  ME_ERRNO_CREATE_EVENT = 69;
  ME_ERRNO_LACK_OF_RESOURCES = 70;
  ME_ERRNO_CANCELLED = 71;
  ME_ERRNO_RING_BUFFER_OVERFLOW = 72;
  ME_ERRNO_SOFTWARE_BUFFER_OVERFLOW = ME_ERRNO_RING_BUFFER_OVERFLOW;
  ME_ERRNO_RING_BUFFER_UNDERFLOW = 73;
  ME_ERRNO_SOFTWARE_BUFFER_UNDERFLOW = ME_ERRNO_RING_BUFFER_UNDERFLOW;
  ME_ERRNO_INVALID_IRQ_EDGE = 74;
  ME_ERRNO_INVALID_IRQ_ARG = 75;
  ME_ERRNO_INVALID_CAP = 76;
  ME_ERRNO_INVALID_CAP_ARG_COUNT = 77;
  ME_ERRNO_INTERNAL = 78;
  ME_ERRNO_VALUE_OUT_OF_RANGE = 79;
  ME_ERRNO_HARDWARE_FIFO_OVERFLOW = 80;
  ME_ERRNO_HARDWARE_BUFFER_OVERFLOW = ME_ERRNO_HARDWARE_FIFO_OVERFLOW;
  ME_ERRNO_HARDWARE_FIFO_UNDERFLOW = 81;
  ME_ERRNO_HARDWARE_BUFFER_UNDERFLOW = ME_ERRNO_HARDWARE_FIFO_UNDERFLOW;
  ME_ERRNO_CONFIG_LOAD_FAILED = 82;
  ME_ERRNO_PROPERTY_CONTAINER = 83;
  ME_ERRNO_PROPERTY_NOT_A_CONTAINER = 84;
  ME_ERRNO_PROPERTY_DATA_TYPE = 85;
  ME_ERRNO_PROPERTY_PATH = 86;
  ME_ERRNO_PROPERTY_INDEX = 87;
  ME_ERRNO_PROPERTY_BUFFER_TOO_SMALL = 88;
  ME_ERRNO_PROPERTY_UNKNOWN = 89;
  ME_ERRNO_PROPERTY_ATTRIBUTE_UNKNOWN = 90;
  ME_ERRNO_PROPERTY_ATTRIBUTE_UNSUPPORTED = 91;
  ME_ERRNO_PROPERTY_SELECTION_INVALID = 92;
  ME_ERRNO_PROPERTY_VALUE_INVALID = 93;
  ME_ERRNO_PROPERTY_READ_ONLY = 94;

//==============================================================================
//  ME_ERRNO_INVALID_ERROR_NUMBER is always the error constant
//  with the greatest number when new error codes are added
//==============================================================================
  ME_ERRNO_INVALID_ERROR_NUMBER = 95;

implementation

end.
